Colecciones Java
  La mayoría de las aplicaciones del mundo real lidian con colecciones de elementos
    archivos, variables, registros de archivos, conjuntos de resultados de base de datos
    En esta seccion se presentara las clases de las colecciones mas comunmente usadas y hara comenzar a usarlas
  Matrices
    Se pueden declarar matrices de dos formas:
      Declaracion de una matriz
         new elementType [arraySize]
    
      Tamaño fijo
        // crea una matriz vacía de 5 elementos:
        int[] integers = new int[5];
     
      El tamaño del conjunto determina el tamaño de la matriz
        // crea una matriz de 5 elementos con valores:
        int[] integers = new int[] { 1, 2, 3, 4, 5 };
        
  Matrices al modo facil
      /*Declara una matriz entera de cinco elemtos*/
      int[] integers = new int[5];
      for (int aa = 0; aa < integers.length; aa++) {
        integers[aa] = aa;
      }
  
  Carga una Matriz
    Logger l = Logger.getLogger("Test");
    for (int aa = 0; aa < integers.length; aa++) {
      l.info("This little integer's value is: " + integers[aa]);
    }
    
    Para JDK 5    
    Logger l = Logger.getLogger("Test");
    for (int i : integers) {
      l.info("This little integer's value is: " + i);
    }
    
  El indice de elemtos
    El metodo length
      Este metodo como es de esperarse retorna cómo es de esperar el tamaño de la matriz
      /*Cotchetes ASCII: Alt+91,Alt + 93*/
      array.length
      Ejemplo
      R7.length
      
  Matriz de objetos
      Presentation [] R7 = new Civil[7];
			R7[0]=new Tradicional("Carlos Daniel Marceleño Rodriguez","CDMX");
			R7[1]=new Tecnica("Carlos Daniel Marceleño Rodriguez","CDMX");
			R7[2]=new Serviciosemergentes("Carlos Daniel Marceleño Rodriguez","CDMX");
			R7[3]=new Precariado("Carlos Daniel Marceleño Rodriguez","CDMX");
			R7[4]=new Nuevosricos("Carlos Daniel Marceleño Rodriguez","CDMX");
			R7[5]=new Acomodada("Carlos Daniel Marceleño Rodriguez","CDMX");
			R7[6]=new Elite("Carlos Daniel Marceleño Rodriguez","CDMX");
      
Ensamblaje y desembalaje/*Contenedores*/
      Cada tipo primitivo en el lenguaje Java tiene una clase homóloga JDK
      Primitivo	Homólogo JDK
      booleano	java.lang.Boolean
      byte    	java.lang.Byte
      caract   	java.lang.Character
      corto	    java.lang.Short
      int	      java.lang.Integer
      largo	    java.lang.Long
      flotante	java.lang.Float
      doble	    java.lang.Double
      
      Embalaje /*poner el primitivo en un envoltorio o caja*/
      int value = 238;
      Integer boxedValue = Integer.valueOf(value);
      
      Desembalaje/**/
      Integer boxedValue = Integer.valueOf(238);
       int intValue = boxedValue.intValue();
       
Embalaje automatico y desembalaje automatico
        /*Recomendable evitar esta tecnica*/
       int intValue = 238;
        Integer boxedValue = intValue;
        //
        intValue = boxedValue;

Analisis y conversion de tipos embalados

Listas

Tipo formal

Iterable

Conjuntos

Mapas

Archivo del codigo Java

JAR

Uso de aplicaciones de terceros

Escribir un buen codigo en Java
Mantener pequeñas clases
Nombre metodos con cuidado
Mantenga pequeños los metodos
Use comentarios
Use un estilo consistente
Use registro incorporado
Siguiendo los pasos de Fowler
