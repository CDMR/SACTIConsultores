Decalaración de clase
        Considere una clase como una plantilla para un objeto donde se define la estructura básica del objeto.
        
    Convenios de denominacion de clases
       /* bicapitalización*/
            Comenzar con una letra en mayuscula
            Solo contener letras y numeros
                  Variables
                  /*lowerCamelCase mismo convenio de bicapitalizacion solo que primer letra en minuscula*/
                    accessSpecifier
                        publico:,protegido:,privado:, Ningun especificador:.
                    dataType
                        primitivo
                        tipo clase
                    initialValue
                      Puede inicializar una variable de instancia cuando la declara  
                  
                  Metodos (Definen el comportamiento )
                       /*accessSpecifier returnType methodName([argumentList]) {
                          methodStatement(s)
                        }*/
                        
                         Metodos constructores
                    
                            /*accessSpecifier ClassName([argumentList]) {
                              constructorStatement(s)
                            }*/
                      argumentType?,argumentName?

                    Definición de clase con un constructor:
                    
                        /*package com.makotogroup.intro;
                        public class Person {
                          private String name;
                          private int age;
                          private int height;
                          private int weight;
                          private String eyeColor;
                          private String gender;
                          public Person() {
                            // Nothing to do...
                          }

                        public Person(String name, int age, int height, String eyeColor, String gender) {
                            this.name = name;
                            this.age = age;
                            this.height = height;
                            this.weight = weight;
                            this.eyeColor = eyeColor;
                            this.gender = gender;
                          }
                        }*/
                        
                    Otros Metodos
                        /**public String getName() { return name; }
                          public void setName(String value) { name = value; }
                          // Other getter/setter combinations...*/
                    Metodos estáticos y de instancia
                    
                    Static o de Clase
                    Fuente:
                    https://www.aprenderaprogramar.com/index.php?option=com_content&view=article&id=650:concepto-de-metodos-de-clase-o-static-y-metodos-de-instancia-diferencias-metodo-main-de-java-cu00683b&catid=68&Itemid=188
                    
                    Un método de clase es aquel que puede ser invocado sin existir una instancia.
                    Ejemplos de declaracion de metodos Static o de clase:
                    public static String getNombre () { … }
                    public static int getNumeroDeDiasDelMes () { … }
                    El método main siempre es un método estático, ya que cuando se invoca no existen objetos
                    
                    Ejemplo de invocacion del metodo de clase:
                    /*NombreDeLaClase.nombreDelMétodo (parámetros si los hay);
                    NombreDelObjeto.nombreDelMétodo (parámetros si los hay);*/
                    
                    
                    Instancia
                    Son aplicables a una instancia de la clase en particular
                    Trabaja sobre el estado actual de la instancia y para cada instancia tendrán un resultado distinto
                    Cuando se declara un metodo sin utilizar la palabra reservada static se genera un metodo de instancia
                    Ejemplo
                    (La plataforma java incluye un paquete java.util.logging, un mecanismo de registro)
Su primer Objeto en Java
        Registro incorporado
                mecanismo para juntar informacion de programa
                entidades con nombres creados por el desarrollador por medio de una llamada al metodo estatico de la clase Logger
                        import java.util.logging.Logger;
                        //...
                        Logger 1 = Logger.getLogger(getClass().getName());
                
                        

ç       Utilizacion de main() como un banco de pruebas
                main()
                        Es un metoodo especial que el desarrollador puede incluir en cualquier clase 
